name: Deploy no Kubernetes
on:
    workflow_call:
        inputs:                 
            environment:                
                type: string
                required: true
                description: "Nome do ambiente que será utilizado"    
            manifests:
                type: string
                required: true
                description: "Path to Kubernetes manifests"
            images:
                type: string
                required: true
                description: "Docker image tags to deploy"
jobs:
    CI-CD:
       runs-on: ubuntu-latest
       environment: ${{ inputs.environment }}
       steps: 
       - name: Obtendo o código
         uses: actions/checkout@v4.1.5
       - name: Configure AWS Credentials
         uses: aws-actions/configure-aws-credentials@v4
         with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: us-east-1      

       - name: Login to Amazon ECR
         id: login-ecr
         run: |
           aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 931783206580.dkr.ecr.us-east-1.amazonaws.com
           
       - name: Build and Push Docker Image to ECR
         uses: docker/build-push-action@v6
         with:
           context: ./src
           file: ./src/Dockerfile
           push: true
           tags: |
             ${{ vars.ECR }}:v${{ github.run_number }}
             ${{ vars.ECR }}:latest  

       - name: Install kubectl
         run: | 
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/OS_DISTRIBUTION/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl             
   
       - name: Download kubeConfig File
         env:
           KUBECONFIG: ${{ runner.temp }}/kubeconfig
         run: |
           aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }} --kubeconfig $KUBECONFIG
           echo "KUBECONFIG=$KUBECONFIG" >> $GITHUB_ENV
     
       - name: Deploy to EKS
         run: |
           sed -i "s|image: REPOSITORY_TAG|image: ${{ inputs.images }}:v${{ github.run_number }}|g" ${{ inputs.manifests }}
           kubectl apply -f ${{ inputs.manifests }} -n ${{vars.APP_NAMESPACE }}      